var searchIndex = {};
searchIndex["h2"] = {"doc":"HTTP2","items":[[3,"Error","h2","The error type for HTTP/2 operations",null,null],[3,"Reason","","HTTP2 Error codes",null,null],[3,"SendStream","","Send frames to a remote.",null,null],[3,"RecvStream","","Receive frames from a remote.",null,null],[3,"ReleaseCapacity","","A handle to release window capacity to a remote stream.",null,null],[11,"fmt","","",0,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"reason","","If the error was caused by the remote peer, the error reason.",0,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"from","","",0,{"inputs":[{"name":"error"}],"output":{"name":"error"}}],[11,"from","","",0,{"inputs":[{"name":"error"}],"output":{"name":"error"}}],[11,"from","","",0,{"inputs":[{"name":"reason"}],"output":{"name":"error"}}],[11,"from","","",0,{"inputs":[{"name":"senderror"}],"output":{"name":"error"}}],[11,"from","","",0,{"inputs":[{"name":"usererror"}],"output":{"name":"error"}}],[11,"fmt","","",0,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"description","","",0,{"inputs":[{"name":"self"}],"output":{"name":"str"}}],[11,"eq","","",1,{"inputs":[{"name":"self"},{"name":"reason"}],"output":{"name":"bool"}}],[11,"ne","","",1,{"inputs":[{"name":"self"},{"name":"reason"}],"output":{"name":"bool"}}],[11,"clone","","",1,{"inputs":[{"name":"self"}],"output":{"name":"reason"}}],[18,"NO_ERROR","","The associated condition is not a result of an error.",1,null],[18,"PROTOCOL_ERROR","","The endpoint detected an unspecific protocol error.",1,null],[18,"INTERNAL_ERROR","","The endpoint encountered an unexpected internal error.",1,null],[18,"FLOW_CONTROL_ERROR","","The endpoint detected that its peer violated the flow-control protocol.",1,null],[18,"SETTINGS_TIMEOUT","","The endpoint sent a SETTINGS frame but did not receive a response in a timely manner.",1,null],[18,"STREAM_CLOSED","","The endpoint received a frame after a stream was half-closed.",1,null],[18,"FRAME_SIZE_ERROR","","The endpoint received a frame with an invalid size.",1,null],[18,"REFUSED_STREAM","","The endpoint refused the stream prior to performing any application processing.",1,null],[18,"CANCEL","","Used by the endpoint to indicate that the stream is no longer needed.",1,null],[18,"COMPRESSION_ERROR","","The endpoint is unable to maintain the header compression context for the connection.",1,null],[18,"CONNECT_ERROR","","The connection established in response to a CONNECT request was reset or abnormally closed.",1,null],[18,"ENHANCE_YOUR_CALM","","The endpoint detected that its peer is exhibiting a behavior that might be generating excessive load.",1,null],[18,"INADEQUATE_SECURITY","","The underlying transport has properties that do not meet minimum security requirements.",1,null],[18,"HTTP_1_1_REQUIRED","","The endpoint requires that HTTP/1.1 be used instead of HTTP/2.",1,null],[11,"description","","Get a string description of the error code.",1,{"inputs":[{"name":"self"}],"output":{"name":"str"}}],[11,"from","","",1,{"inputs":[{"name":"u32"}],"output":{"name":"reason"}}],[11,"fmt","","",1,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",1,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[0,"client","","HTTP2 client side.",null,null],[3,"Handshake","h2::client","In progress H2 connection binding",null,null],[3,"Client","","Marker type indicating a client peer",null,null],[3,"Connection","","A future to drive the H2 protocol on a connection.",null,null],[3,"ResponseFuture","","A future of an HTTP response.",null,null],[3,"Builder","","Build a Client.",null,null],[11,"fmt","","",2,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",3,{"inputs":[{"name":"self"}],"output":{"name":"builder"}}],[11,"fmt","","",3,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"handshake","","Bind an H2 client connection.",4,{"inputs":[{"name":"t"}],"output":{"name":"handshake"}}],[11,"builder","","Creates a Client Builder to customize a Client before binding.",4,{"inputs":[],"output":{"name":"builder"}}],[11,"poll_ready","","Returns `Ready` when the connection can initialize a new HTTP 2.0 stream.",4,{"inputs":[{"name":"self"}],"output":{"name":"poll"}}],[11,"send_request","","Send a request on a new HTTP 2.0 stream",4,{"inputs":[{"name":"self"},{"name":"request"},{"name":"bool"}],"output":{"name":"result"}}],[11,"fmt","","",4,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",4,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[11,"initial_window_size","","Set the initial window size of the remote peer.",3,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"self"}}],[11,"max_frame_size","","Set the max frame size of received frames.",3,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"self"}}],[11,"max_concurrent_streams","","Set the maximum number of concurrent streams.",3,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"self"}}],[11,"enable_push","","Enable or disable the server to send push promises.",3,{"inputs":[{"name":"self"},{"name":"bool"}],"output":{"name":"self"}}],[11,"handshake","","Bind an H2 client connection.",3,{"inputs":[{"name":"self"},{"name":"t"}],"output":{"name":"handshake"}}],[11,"default","","",3,{"inputs":[],"output":{"name":"builder"}}],[11,"set_target_window_size","","Sets the target window size for the whole connection.",5,{"inputs":[{"name":"self"},{"name":"u32"}],"output":null}],[11,"poll","","",5,{"inputs":[{"name":"self"}],"output":{"name":"poll"}}],[11,"fmt","","",5,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"poll","","",6,{"inputs":[{"name":"self"}],"output":{"name":"poll"}}],[11,"fmt","","",6,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"poll","","",2,{"inputs":[{"name":"self"}],"output":{"name":"poll"}}],[0,"server","h2","HTTP2 server side.",null,null],[3,"Handshake","h2::server","In progress H2 connection binding",null,null],[3,"Server","","Marker type indicating a client peer",null,null],[3,"Builder","","Build a Server",null,null],[3,"Respond","","Respond to a request",null,null],[11,"clone","","",7,{"inputs":[{"name":"self"}],"output":{"name":"builder"}}],[11,"fmt","","",7,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"default","","",7,{"inputs":[],"output":{"name":"builder"}}],[11,"fmt","","",8,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"handshake","","Bind an H2 server connection.",9,{"inputs":[{"name":"t"}],"output":{"name":"handshake"}}],[11,"builder","","Create a Server Builder",9,{"inputs":[],"output":{"name":"builder"}}],[11,"set_target_window_size","","Sets the target window size for the whole connection.",9,{"inputs":[{"name":"self"},{"name":"u32"}],"output":null}],[11,"poll_close","","Returns `Ready` when the underlying connection has closed.",9,{"inputs":[{"name":"self"}],"output":{"name":"poll"}}],[11,"poll","","",9,{"inputs":[{"name":"self"}],"output":{"name":"poll"}}],[11,"fmt","","",9,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"initial_window_size","","Set the initial window size of the remote peer.",7,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"self"}}],[11,"max_frame_size","","Set the max frame size of received frames.",7,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"self"}}],[11,"max_concurrent_streams","","Set the maximum number of concurrent streams.",7,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"self"}}],[11,"handshake","","Bind an H2 server connection.",7,{"inputs":[{"name":"self"},{"name":"t"}],"output":{"name":"handshake"}}],[11,"send_response","","Send a response",8,{"inputs":[{"name":"self"},{"name":"response"},{"name":"bool"}],"output":{"name":"result"}}],[11,"send_reset","","Reset the stream",8,{"inputs":[{"name":"self"},{"name":"reason"}],"output":null}],[11,"poll","","",10,{"inputs":[{"name":"self"}],"output":{"name":"poll"}}],[11,"fmt","","",10,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","h2","",11,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",12,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"reserve_capacity","","Request capacity to send data",11,{"inputs":[{"name":"self"},{"name":"usize"}],"output":null}],[11,"capacity","","Returns the stream's current send capacity.",11,{"inputs":[{"name":"self"}],"output":{"name":"usize"}}],[11,"poll_capacity","","Request to be notified when the stream's capacity increases",11,{"inputs":[{"name":"self"}],"output":{"name":"poll"}}],[11,"send_data","","Send a single data frame",11,{"inputs":[{"name":"self"},{"name":"b"},{"name":"bool"}],"output":{"name":"result"}}],[11,"send_trailers","","Send trailers",11,{"inputs":[{"name":"self"},{"name":"headermap"}],"output":{"name":"result"}}],[11,"send_reset","","Reset the stream",11,{"inputs":[{"name":"self"},{"name":"reason"}],"output":null}],[11,"is_end_stream","","Returns true if the receive half has reached the end of stream.",13,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"release_capacity","","Get a mutable reference to this streams `ReleaseCapacity`.",13,{"inputs":[{"name":"self"}],"output":{"name":"releasecapacity"}}],[11,"poll_trailers","","Poll trailers",13,{"inputs":[{"name":"self"}],"output":{"name":"poll"}}],[11,"poll","","",13,{"inputs":[{"name":"self"}],"output":{"name":"poll"}}],[11,"fmt","","",13,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"release_capacity","","Release window capacity back to remote stream.",12,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"result"}}],[11,"clone","","",12,{"inputs":[{"name":"self"}],"output":{"name":"self"}}]],"paths":[[3,"Error"],[3,"Reason"],[3,"ResponseFuture"],[3,"Builder"],[3,"Client"],[3,"Connection"],[3,"Handshake"],[3,"Builder"],[3,"Respond"],[3,"Server"],[3,"Handshake"],[3,"SendStream"],[3,"ReleaseCapacity"],[3,"RecvStream"]]};
initSearch(searchIndex);
